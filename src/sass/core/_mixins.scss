@mixin respond-to($breakpoint) {
    @if $breakpoint == 'sm' {
      @media (max-width: 576px) {
        @content;
      }
    } @else if $breakpoint == 'md' {
      @media (max-width: 768px) {
        @content;
      }
    } @else if $breakpoint == 'lg' {
      @media (min-width: 992px) {
        @content;
      }
    }
  }
  

@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media screen and (max-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
  }

  @mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media screen and (max-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    } @else {
      @warn "No value found for `#{$breakpoint}` in $breakpoints map.";
    }
  }
  
//   For centering elements horizontally and vertically.
  @mixin center-flex {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  
  @mixin center-grid {
    display: grid;
    place-items: center;
  }
  
//   For truncating text with an ellipsis.
  @mixin text-ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  

//   For styling scrollbars (Webkit browsers only).
@mixin custom-scrollbar($thumb-color, $track-color) {
    &::-webkit-scrollbar {
      width: 10px;
    }
  
    &::-webkit-scrollbar-thumb {
      background-color: $thumb-color;
      border-radius: 10px;
    }
  
    &::-webkit-scrollbar-track {
      background-color: $track-color;
    }
  }

  
//   For maintaining a specific aspect ratio.
@mixin aspect-ratio($width, $height) {
    position: relative;
    width: 100%;
    padding-top: percentage($height / $width);
  
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }

  
//   For adding smooth transitions to elements.
@mixin transition($properties: all, $duration: 0.3s, $ease: ease-in-out) {
    transition: $properties $duration $ease;
  }

//   Reusable box-shadow styles.
  @mixin box-shadow($x: 0px, $y: 4px, $blur: 10px, $spread: 0px, $color: rgba(0, 0, 0, 0.1)) {
    box-shadow: $x $y $blur $spread $color;
  }
  

//   Reusable hover effect for scaling elements.